@using webNews.Domain.Entities
@using webNews.Language.Language
@using webNews.HtmlHelpers
@model webNews.Areas.Admin.Models.Category.CategoryModel
@{
    var add = Model.Action == "Add";
    var edit = Model.Action == "Edit";
    var popupTitle = Model.Action == "Add" ? "Thêm mới" : "Cập nhật";
}
<script src="~/Theme/vendors/Jquery/jquery-1.11.3.min.js"></script>
<script src="~/Assets/Admin/Validate/jquery.validate.min.js"></script>
<script src="~/Assets/Admin/Validate/jquery.validate.unobtrusive.min.js"></script>
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckfinder/ckfinder.js"></script>
<div class="modal fade" id="modalDetails" role="dialog" aria-labelledby="xModal">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@popupTitle</h4>
            </div>
            <div class="modal-body clearfix">
                <form id="formDetail" name="formDetail" class="form-horizontal" enctype="multipart/form-data" method="post" accept-charset="utf-8">
                    @Html.HiddenFor(x => x.Id, new { @id = "txtId" })

                    <div class="form-group">
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Code)</label>
                        <div class="col-xs-4">
                            @Html.ValidationHtmlMessageFor(model => model.Code, "", new { @class = "field-validation-valid" })
                            @Html.TextBoxFor(x => x.Code, new { @class = "form-control input-sm ", @id = "txtCode", @placeholder = "Mã danh mục" })
                        </div>
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Name)</label>
                        <div class="col-xs-4">
                            @Html.ValidationHtmlMessageFor(model => model.Name, "", new { @class = "field-validation-valid" })
                            @Html.TextBoxFor(x => x.Name, new { @class = "form-control input-sm", @id = "txtName", @placeholder = "Tên danh mục" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.GroupId)</label>
                        <div class="col-xs-4">
                            @Html.ValidationHtmlMessageFor(model => model.GroupId, "", new { @class = "field-validation-valid" })
                            @Html.DropDownListFor(x => x.GroupId, new SelectList(Model.ListGroups, "Id", "Name"), new { @class = "form-control input-sm", @id = "txtGroupId", @multiple = "multiple" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.AgeType)</label>
                        <div class="col-xs-2">
                            @Html.ValidationHtmlMessageFor(model => model.AgeType, "", new { @class = "field-validation-valid" })
                            @Html.DropDownListFor(x => x.AgeType, new SelectList(Model.ListAgeType, "Value", "Text"), new { @class = "form-control input-sm", @id = "txtAgeType" })
                        </div>

                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.FromAge)</label>
                        <div class="col-xs-2">
                            @Html.ValidationHtmlMessageFor(model => model.FromAge, "", new { @class = "field-validation-valid" })
                            @Html.TextBoxFor(x => x.FromAge, new { @class = "form-control input-sm amount-mask", @id = "txtFromAge", @placeholder = "Từ" })
                        </div>
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.ToAge)</label>
                        <div class="col-xs-2">
                            @Html.ValidationHtmlMessageFor(model => model.ToAge, "", new { @class = "field-validation-valid" })
                            @Html.TextBoxFor(x => x.ToAge, new { @class = "form-control input-sm amount-mask", @id = "txtToAge", @placeholder = "Đến" })
                        </div>
                    </div>

                    @if (Model.ListCategoryPrices != null)
                    {
                        foreach (var item in Model.ListCategoryPrices)
                        {
                            <div class="form-group">
                                <label class="col-xs-2 control-label">@item.Name</label>
                                <div class="col-xs-4">
                                    <div class="input-group input-group-sm" id="divPrice">
                                        @if (edit)
                                        {
                                            <input type="text" id="@item.OrderTypeId" name="@item.Code"
                                                   class="form-control input-sm amount-mask price" value="@item.Price">
                                        }
                                        else
                                        {
                                            <input type="text" id="@item.OrderTypeId" name="@item.Code"
                                                   class="form-control input-sm amount-mask price">
                                        }
                                        <span class="input-group-addon">
                                            VNĐ
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                        foreach (OrderType item in Model.ListOrderTypes.Where(x => !Model.ListCategoryPrices.Any(x1 => x1.OrderTypeId == x.Id)))
                        {
                            <div class="form-group">
                                <label class="col-xs-2 control-label">@item.Name</label>
                                <div class="col-xs-4">
                                    <div class="input-group input-group-sm" id="divPrice">
                                        <input type="text" id="@item.Id" name="@item.Code"
                                               class="form-control input-sm amount-mask price">
                                        <span class="input-group-addon">
                                            VNĐ
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        foreach (var item in Model.ListOrderTypes)
                        {
                            <div class="form-group">
                                <label class="col-xs-2 control-label">@item.Name</label>
                                <div class="col-xs-4">
                                    <div class="input-group input-group-sm" id="divPrice">
                                        <input type="text" id="@item.Id" name="@item.Code"
                                               class="form-control input-sm amount-mask price">
                                        <span class="input-group-addon">
                                            VNĐ
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    }

                    <div class="form-group">
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Description)</label>
                        <div class="col-xs-10">
                            @Html.ValidationHtmlMessageFor(model => model.Description, "", new { @class = "field-validation-valid" })
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control input-sm", @id = "txtDescription", @placeholder = "Nhập mô tả" })
                            <script>
                                CKEDITOR.replace("txtDescription");
                                CKFinder.setupCKEditor(null, '/ckfinder');
                                CKEDITOR.addCss('.cke_editable { height: 400px; }');
                            </script>
                        </div>
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.MoreInformation)</label>
                        <div class="col-xs-10">
                            @Html.ValidationHtmlMessageFor(model => model.MoreInformation, "", new { @class = "field-validation-valid" })
                            @Html.TextAreaFor(x => x.MoreInformation, new { @class = "form-control input-sm", @id = "txtMoreInformation", @placeholder = "Nhập thông tin" })
                            <script>
                                CKEDITOR.replace("txtMoreInformation");
                            </script>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Status)</label>
                        <div class="col-xs-4">
                            @Html.ValidationHtmlMessageFor(model => model.Status, "", new { @class = "field-validation-valid" })
                            @Html.DropDownListFor(x => x.Status, new SelectList(Model.ListStatus, "Value", "Text"), new { @class = "form-control input-sm", @id = "txtStatus" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-xs-4 col-md-2 control-label">File</label>
                        <div class="col-xs-12 col-md-12 no-padding div-file">
                            <div class="col-md-8 no-padding">
                            </div>
                        </div>
                    </div>
                    @{
                        if (edit)
                        {
                            <div class="form-group">
                                <label class="col-xs-4 col-md-2 control-label"></label>
                                <div class="col-xs-8 col-md-5 div-image">
                                    @foreach (var file in Model.ListFiles)
                                    {
                                        <div class="col-xs-12 col-md-12 no-padding" index="1">
                                            <div class="col-md-8 no-padding">
                                                <img class="img-preview" src="@Url.Content("~/Content/Cate/" + Path.GetFileName(file.Url))" id="@file.Id" title="@Model.Name" alt="@Model.Name" width="100" height="100" style="margin-bottom: 10px" />
                                            </div>
                                            <div class="col-md-4">
                                                <button id="btnDeleteImg" class="btn btn-blue" type="button"><i class="fa fa-times"></i></button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                    <div class="form-group">
                        <label class="col-xs-4 col-md-2 control-label"></label>
                        <div class="col-xs-8 col-md-5 parent">
                            <div class="col-xs-12 col-md-12 no-padding div-file" index="1" id="divFile-1">
                                <div class="col-md-8 no-padding">
                                    <input id="txtUploadFile" type="file" class="form-control col-md-8" name="UploadFile" />
                                </div>
                                <div class="col-md-4">
                                    <button id="btnDelete" class="btn btn-blue hidden" type="button"><i class="fa fa-times"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-8 col-md-1 no-padding">
                            <button id="btnAddFile" class="btn btn-blue" type="button"><i class="fa fa-plus"></i></button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                @if (add)
                {
                    <button id="btnAdd" class="btn btn-primary" type="button"><i class="fa fa-check"></i> @(Resource.Btn_Save_Lang)</button>
                }
                else
                    if (edit)
                {
                    <button id="btnEdit" class="btn btn-primary" type="button"><i class="fa fa-check"></i> @(Resource.Btn_Edit_Lang)</button>
                }
                <button type="button" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-reply"></i>@Resource.Btn_Close_Lang</button>
            </div>
        </div>
    </div>
</div>