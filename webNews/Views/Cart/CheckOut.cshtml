@using webNews.HtmlHelpers
@model webNews.Common.Common.CheckOutModel
<style>
    .required {
        margin-left: 5px;
        color: red;
    }

    .field-validation-error span {
        color: red;
    }
</style>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Theme/vendors/Jquery/jquery-1.11.3.min.js"></script>
<script src="~/Assets/Admin/Validate/jquery.validate.min.js"></script>
<script src="~/Assets/Admin/Validate/jquery.validate.unobtrusive.min.js"></script>
<div class="container">

    <div class="content">
        @using (Html.BeginForm("CheckOut", "Cart", FormMethod.Post, new { @id = "check_out_form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h2>Đăng ký đơn hàng</h2>
                <hr />
                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.CustomerName)<span class="required">*</span></label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.CustomerName, "", new { @class = "field-validation-valid" })
                        @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control input-sm", @id = "txtCustomerName", @placeholder = "Họ tên" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Phone)<span class="required">*</span></label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.Phone, "", new { @class = "field-validation-valid" })
                        @Html.TextBoxFor(x => x.Phone, new { @class = "form-control input-sm", @id = "txtPhone", @placeholder = "Số điện thoại" })
                    </div>
                </div>
                @* <div class="form-group"> *@
                @*     <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Email)<span class="required">*</span></label> *@
                @*     <div class="col-xs-4"> *@
                @*         @Html.ValidationHtmlMessageFor(model => model.Phone, "", new { @class = "field-validation-valid" }) *@
                @*         @Html.TextBoxFor(x => x.Email, new { @class = "form-control input-sm", @id = "txtEmail", @placeholder = "Email" }) *@
                @*     </div> *@
                @* </div> *@
                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.ProvinceId)</label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.ProvinceId, "", new { @class = "field-validation-valid" })
                        @Html.DropDownListFor(x => x.ProvinceId, new SelectList(Model.ListProvinces, "Id", "name"), "Chọn tỉnh/thành phố", new { @class = "form-control input-sm", @id = "txtProvinceId" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.DistrictId)</label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.DistrictId, "", new { @class = "field-validation-valid" })
                        <select name="DistrictId" id="txtDistrictId" class="form-control">
                            <option>Chọn quận/huyện</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.WardId)</label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.WardId, "", new { @class = "field-validation-valid" })
                        <select name="WardId" id="txtWardId" class="form-control">
                            <option>Chọn phường/xã</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-xs-2 control-label">@Html.LabelFor(x => x.Address)</label>
                    <div class="col-xs-4">
                        @Html.ValidationHtmlMessageFor(model => model.Address, "", new { @class = "field-validation-valid" })
                        @Html.TextBoxFor(x => x.Address, new { @class = "form-control input-sm", @id = "txtAddress", @placeholder = "Nhập địa chỉ" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-xs-2 control-label"></label>
                    <div class="col-xs-4">
                        <button id="btnRegis" class="btn btn-primary" type="button"><i class="fa fa-check"></i>Đặt hàng</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section scripts{
    <script>
        var GetDistrictByProvinceId = function (provinceId, districtId, controlSelect, optionAll) {
            $.ajax({
                url: '/Cart/GetDistrictByProvinceId',
                type: "Post",
                data: {
                    provinceId: provinceId
                },
                async: true,
                success: function (response) {
                    var val = $(controlSelect).val();
                    var selected = '';
                    $(controlSelect).empty();
                    if (optionAll)
                        $(controlSelect).append('<option value="-1">Chọn quận/huyện</option>');
                    if (!$.isEmptyObject(response))
                        $.each(response,
                            function (key, value) {
                                selected = districtId === value.Id ? "selected" : "";
                                $(controlSelect).append('<option value="' + value.Id + '"' + selected + '>' + value.name + '</option>');
                            });
                },
                error: function (e) {
                    SweetAlert("Có lỗi trong quá trình xử lý");
                }
            });
        }

        var GetWardByDistrictId = function (districtId, wardId, controlSelect, optionAll) {
            $.ajax({
                url: '/Cart/GetWardByDistrictId',
                type: "Post",
                data: {
                    districtId: districtId
                },
                async: true,
                success: function (response) {
                    var val = $(controlSelect).val();
                    var selected = '';
                    $(controlSelect).empty();
                    if (optionAll)
                        $(controlSelect).append('<option value="-1">Chọn phường/xã</option>');
                    if (!$.isEmptyObject(response))
                        $.each(response,
                            function (key, value) {
                                selected = wardId === value.Id ? "selected" : "";
                                $(controlSelect).append('<option value="' + value.Id + '"' + selected + '>' + value.name + '</option>');
                            });
                },
                error: function (e) {
                    SweetAlert("Có lỗi trong quá trình xử lý");
                }
            });
        }
        $('#check_out_form').on('change',
            '#txtProvinceId',
            function (e) {
                e.preventDefault();
                var provinceId = $('#txtProvinceId').val();
                GetDistrictByProvinceId(provinceId, null, '#txtDistrictId', true);
            });

        $('#check_out_form').on('change',
            '#txtDistrictId',
            function (e) {
                e.preventDefault();
                var districtId = $('#txtDistrictId').val();
                GetWardByDistrictId(districtId, null, '#txtWardId', true);
            });

        $('#btnRegis').on('click',
            function () {
                var data = {
                    CustomerName: $('#check_out_form').find('#txtCustomerName').val(),
                    Phone: $('#check_out_form').find('#txtPhone').val(),
                    ProvinceId: $('#check_out_form').find('#txtProvinceId').val(),
                    DistrictId: $('#check_out_form').find('#txtDistrictId').val(),
                    WardId: $('#check_out_form').find('#txtWardId').val()
                }

                $.ajax({
                    url: '/Cart/CheckOut',
                    type: "Post",
                    data: data,
                    async: true,
                    success: function (response) {
                        if (response.Status == "01") {
                            swal({
                                title: 'Đặt hàng thành công',
                                text: "Chúng tôi sẽ liên hệ lại ngay!",
                                type: 'info',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Đóng'
                            }).then(function () {
                                window.location.href = 'trang-chu';
                            })
                        } else {
                            swal("Có lỗi trong quá trình xử lý");
                        }
                    },
                    error: function (e) {
                        swal("Có lỗi trong quá trình xử lý");
                    }
                });
            });
    </script>
}